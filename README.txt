make
make clean
Για την μεταγγλώτιση και τη διαγραφή των αρχείων αντίστοιχα. 
Έχω βάλει επίσης "make run" και "make val" που τρέχουν το πρόγραμμα με το αρχείο testing.csv και bucketentries 2
Το αρχείο testing.csv είναι μικρό και βολεύει για να φαίνονται σχετικά εύκολα οι αλλαγές στις δομές από τις εντολές mvote, πχ 
σε συνδιασμό με το αρχειο "bvkeys.txt" για την εκτέλεση της εντολής bv και μετά της o.

Για την υλοποίηση των δομών, υπάρχει αρχικά ως #define το INITIAL_SIZE που καθορίζει πόσα buckets θα έχει αρχικά το hash table, το έχω αφήσει 2 όπως ήταν στο paper, φυσικά δουλευεί και με άλλο μέγεθος.
Κατά την εκτέλεση του προγράμματος γίνονται αρχικά insert όλες οι εγγραφές που βρίσκονται στο αρχείο registeredvoters από την συνάρτηση read_voters και μετά επιλέγει ο χρήστης εντολές για το mvote.
Στο hash table επέλεξα ο πίνακας με τα buckets να έχει όντως buckets σε κάθε θέση και όχι δείκτη σε bucket, για αυτό σε μερικές περιπτώσεις τα πρώτα buckets θέλουν διαφορετική διαχείριση από τα overlfow buckets.
Δεν έχω κάνει κάτι ιδιαίτερο στην υλοποίηση του γενικά, έχω ακολούθησει ακριβώς ότι λέει το paper.
Στο split απλώς αποθηκεύω προσωρινά τους voters, κάνω free τα overflow buckets και "καθαρίζω" το πρώτο bucket, και μετά ξαναγίνοται insert με την κατάλληλη hash fucntion.
Για την λίστα, σε κάθε node ( για κάθε postal code ) υπάρχει δείκτης σε άλλη λίστα όπου εκεί είναι οι δείκτης για τους voters.
Για την 8η εντολή του mvote που θέλει να εμφανίζονται ταξινομημένα, βγάζω κάθε κόμβο από την λίστα και τον κάνω insert σε καινούρια λίστα στην θέση που πρέπει ώστε να προκύψει ταξινομημένη λίστα.
Πιστεύω τα σχόλια στον κώδικα θα σας καλύψουν.
Έχω υλοποιήσει και συναρτήσεις print_list και print_ht για την εκτύπωση των δομών.
